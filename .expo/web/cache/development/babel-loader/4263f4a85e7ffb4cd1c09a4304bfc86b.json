{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"G:\\\\PAM\\\\quizkhas\\\\src\\\\components\\\\Game.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Soal from \"./Soal\";\nimport { loadSoals } from \"../Soal/soalAPI\";\nimport HUD from \"./HUD\";\nimport SimpanSkorForm from \"./SimpanSkorForm\";\nexport default function Game(_ref) {\n  var history = _ref.history;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      soals = _useState2[0],\n      setSoals = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentSoal = _useState4[0],\n      setCurrentSoal = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      skor = _useState8[0],\n      setSkor = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      soalNomor = _useState10[0],\n      setSoalNomor = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selesai = _useState12[0],\n      setSelesai = _useState12[1];\n\n  useEffect(function () {\n    loadSoals().then(setSoals).catch(console.error);\n  }, []);\n\n  var skorSimpan = function skorSimpan() {\n    history.push('/');\n  };\n\n  var gantiSoal = useCallback(function () {\n    var bonus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (soals.length === 0) {\n      setSelesai(true);\n      return setSkor(skor + bonus);\n    }\n\n    var randomSoalIndex = Math.floor(Math.random() * soals.length);\n    var currentSoal = soals[randomSoalIndex];\n\n    var remainingSoals = _toConsumableArray(soals);\n\n    remainingSoals.splice(randomSoalIndex, 1);\n    setSoals(remainingSoals);\n    setCurrentSoal(currentSoal);\n    setLoading(false);\n    setSkor(skor + bonus);\n    setSoalNomor(soalNomor + 1);\n  }, [skor, soalNomor, soals, setSoals, setLoading, setCurrentSoal, setSoalNomor]);\n  useEffect(function () {\n    if (!currentSoal && soals.length) {\n      gantiSoal();\n    }\n  }, [currentSoal, soals, gantiSoal]);\n  return React.createElement(React.Fragment, null, loading && !selesai && React.createElement(\"div\", {\n    id: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }), !loading && !selesai && currentSoal && React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, React.createElement(HUD, {\n    skor: skor,\n    soalNomor: soalNomor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), React.createElement(Soal, {\n    soal: currentSoal,\n    gantiSoal: gantiSoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })), selesai && React.createElement(SimpanSkorForm, {\n    skor: skor,\n    skorSimpan: skorSimpan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }));\n}","map":{"version":3,"sources":["G:/PAM/quizkhas/src/components/Game.js"],"names":["React","useState","useEffect","useCallback","Soal","loadSoals","HUD","SimpanSkorForm","Game","history","soals","setSoals","currentSoal","setCurrentSoal","loading","setLoading","skor","setSkor","soalNomor","setSoalNomor","selesai","setSelesai","then","catch","console","error","skorSimpan","push","gantiSoal","bonus","length","randomSoalIndex","Math","floor","random","remainingSoals","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport Soal from './Soal';\r\nimport { loadSoals } from '../Soal/soalAPI';\r\nimport HUD from './HUD';\r\nimport SimpanSkorForm from './SimpanSkorForm';\r\n\r\nexport default function Game({ history }) {\r\n    const [soals, setSoals] = useState([]);\r\n    const [currentSoal, setCurrentSoal] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [skor, setSkor] = useState(0);\r\n    const [soalNomor, setSoalNomor] = useState(0);\r\n    const [selesai, setSelesai] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadSoals()\r\n            .then(setSoals)\r\n            .catch(console.error);\r\n    }, []);\r\n\r\n    const skorSimpan = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    const gantiSoal = useCallback(\r\n        (bonus = 0) => {\r\n            if (soals.length === 0) {\r\n                setSelesai(true);\r\n                return setSkor(skor + bonus);\r\n            }\r\n\r\n            const randomSoalIndex = Math.floor(\r\n                Math.random() * soals.length\r\n            );\r\n            const currentSoal = soals[randomSoalIndex];\r\n            const remainingSoals = [...soals];\r\n            remainingSoals.splice(randomSoalIndex, 1);\r\n\r\n            setSoals(remainingSoals);\r\n            setCurrentSoal(currentSoal);\r\n            setLoading(false);\r\n            setSkor(skor + bonus);\r\n            setSoalNomor(soalNomor + 1);\r\n        },\r\n        [\r\n            skor,\r\n            soalNomor,\r\n            soals,\r\n            setSoals,\r\n            setLoading,\r\n            setCurrentSoal,\r\n            setSoalNomor\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!currentSoal && soals.length) {\r\n            gantiSoal();\r\n        }\r\n    }, [currentSoal, soals, gantiSoal]);\r\n\r\n    return (\r\n        <>\r\n            {loading && !selesai && <div id=\"loader\" />}\r\n\r\n            {!loading && !selesai && currentSoal && (\r\n                <div>\r\n                    <HUD skor={skor} soalNomor={soalNomor} />\r\n                    <Soal\r\n                        soal={currentSoal}\r\n                        gantiSoal={gantiSoal}\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            {selesai && <SimpanSkorForm skor={skor} skorSimpan={skorSimpan} />}\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}