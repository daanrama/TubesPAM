{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var loadSoals = function loadSoals() {\n  var url, res, _await$res$json, results;\n\n  return _regeneratorRuntime.async(function loadSoals$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://mocki.io/v1/7198eb9f-de26-44e0-ac92-ca1939ac4225\";\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          _await$res$json = _context.sent;\n          results = _await$res$json.results;\n          return _context.abrupt(\"return\", convertSoalsFromAPI(results));\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 12]], Promise);\n};\n\nvar convertSoalsFromAPI = function convertSoalsFromAPI(rawSoals) {\n  return rawSoals.map(function (loadedSoal) {\n    var formattedSoal = {\n      soal: loadedSoal.soal,\n      answerChoices: _toConsumableArray(loadedSoal.incorrect_answers)\n    };\n    formattedSoal.jawab = Math.floor(Math.random() * 4);\n    formattedSoal.answerChoices.splice(formattedSoal.jawab, 0, loadedSoal.correct_answer);\n    return formattedSoal;\n  });\n};","map":{"version":3,"sources":["G:/PAM/quizkhas/src/Soal/soalAPI.js"],"names":["loadSoals","url","fetch","res","json","results","convertSoalsFromAPI","console","error","rawSoals","map","loadedSoal","formattedSoal","soal","answerChoices","incorrect_answers","jawab","Math","floor","random","splice","correct_answer"],"mappings":";;AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,GADe;AAAA;AAAA;AAAA,2CAICC,KAAK,CAACD,GAAD,CAJN;;AAAA;AAIXE,UAAAA,GAJW;AAAA;AAAA,2CAKSA,GAAG,CAACC,IAAJ,EALT;;AAAA;AAAA;AAKTC,UAAAA,OALS,mBAKTA,OALS;AAAA,2CAMVC,mBAAmB,CAACD,OAAD,CANT;;AAAA;AAAA;AAAA;AAQjBE,UAAAA,OAAO,CAACC,KAAR;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAYP,IAAMF,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACG,QAAD,EAAc;AACtC,SAAOA,QAAQ,CAACC,GAAT,CAAa,UAACC,UAAD,EAAgB;AAChC,QAAMC,aAAa,GAAG;AAClBC,MAAAA,IAAI,EAAEF,UAAU,CAACE,IADC;AAElBC,MAAAA,aAAa,qBAAMH,UAAU,CAACI,iBAAjB;AAFK,KAAtB;AAKAH,IAAAA,aAAa,CAACI,KAAd,GAAsBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAtB;AAEAP,IAAAA,aAAa,CAACE,aAAd,CAA4BM,MAA5B,CACIR,aAAa,CAACI,KADlB,EAEI,CAFJ,EAGIL,UAAU,CAACU,cAHf;AAMA,WAAOT,aAAP;AACH,GAfM,CAAP;AAgBH,CAjBD","sourcesContent":["export const loadSoals = async () => {\r\n    const url = `https://mocki.io/v1/7198eb9f-de26-44e0-ac92-ca1939ac4225`;\r\n\r\n    try {\r\n        const res = await fetch(url);\r\n        const { results } = await res.json();\r\n        return convertSoalsFromAPI(results);\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\nconst convertSoalsFromAPI = (rawSoals) => {\r\n    return rawSoals.map((loadedSoal) => {\r\n        const formattedSoal = {\r\n            soal: loadedSoal.soal,\r\n            answerChoices: [...loadedSoal.incorrect_answers]\r\n        };\r\n\r\n        formattedSoal.jawab = Math.floor(Math.random() * 4);\r\n\r\n        formattedSoal.answerChoices.splice(\r\n            formattedSoal.jawab,\r\n            0,\r\n            loadedSoal.correct_answer\r\n        );\r\n\r\n        return formattedSoal;\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}